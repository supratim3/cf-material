{
  "name": "declarative-visualizations",
  "description": "Declarative data visualizations are graphs and other diagrams which invoke SVG images from the D3 library using simple, declarative HTML.",
  "version": "0.6.0",
  "main": [
    "js/declarative-visualizations.js",
    "less/declarative-visualizations.less",
    "less/responsive.less"
  ],
  "ignore": [
    "components",
    "css",
    "node_modules",
    "test",
    ".*",
    "Gruntfile.js",
    "js/require.config.js"
  ],
  "dependencies": {
    "ge-bootstrap": "git://devcloud.sw.ge.com/source/scm/dxc/ge-bootstrap#~1.1.1",
    "d3-amd": "git://devcloud.sw.ge.com/source/scm/dxc/d3-amd#~3.2.3",
    "requirejs": "~2.1.6",
    "jquery": "~1.10.0"
  },
  "gitHead": "7ac17dae4b96ae9ac09b7c4a915b95c7f00f7937",
  "readme": "\n# Declarative Visualizations\n\nDeclarative data visualizations are graphs and other diagrams which invoke SVG images from the D3 library using simple, declarative HTML.\n\nTo invoke visualizations, first use a `<div></div>` element with the `data-visualization` attribute set to the appropriate visualization type. Additional `data-` attributes are used by each type to declare the values for rendering.\n\n`<div data-visualization=\"bar\"></div>`\n\nTo initialize the visualization, first require the declarative visualizations module to import the necessary code libraries.\n\n```\nrequire(['declarative-visualizations'], function(visualizations) {\n  ...\n});\n```\n\nIn the require callback, invoke the visualization method on each of the matched elements and apply any additional functionality as needed.\n\n```\n$('div[data-visualization=\"gauge\"]').each(function(i, element) {\n  var gauge = visualizations.gauge(element);\n});\n```\n\nBy changing the `data-` attributes on the tag and then calling `update` you can redraw the visualization.\n\n```\nvar gauge = visualizations.gauge(element);\n\n// ... change data-* attributes ...\n\ngauge.update();\n```\n\n## Bar\n\nA bar chart visualization.\n\nSample HTML:\n\n<pre><code>&lt;div data-visualization=\"bar\" data-max=\"5000\" data-value=\"3965.20\" data-threshold=\"1000\"&gt;&lt;/div&gt;\n</code></pre>\n\nData API:\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>data-duration</code></td>\n    <td>Animation speed in milliseconds of visualization for initial render and subsequent updates. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-max</code></td>\n    <td>Maximum value.</td>\n  </tr>\n  <tr>\n    <td><code>data-min</code></td>\n    <td>Minimum value. Defaults to <code>0</code>. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-target</code></td>\n    <td>Target URL for optional JSON source. Will ignore other `data-` attributes if specified. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-threshold</code></td>\n    <td>Threshold value. Defines the position of the white marker on the visualization. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-value</code></td>\n    <td>Current value. Defines the size of the colored area.</td>\n  </tr>\n  <tr>\n    <td><code>data-visualization</code></td>\n    <td>Type of visualization: <code>bar</code>.</td>\n  </tr>\n</table>\n\n## Donut\n\nA donut chart visualization.\n\nSample HTML:\n\n<pre><code>&lt;div data-visualization=\"donut\" data-source='[[\"Fuel\", 70.3], [\"Capital Allocation\", 19.5], [\"Operations &amp; Maintenance\", 10.2]]'&gt;&lt;/div&gt;\n</code></pre>\n\nData API:\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>data-duration</code></td>\n    <td>Animation speed in milliseconds of visualization for initial render and subsequent updates. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-labelhidden</code></td>\n    <td>Boolean toggle for visibility of labels. Defaults to <code>false</code>. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-labelwrap</code></td>\n    <td>Minimum width of containing element before labels should wrap underneath. Can be disabled with a value of <code>false</code>. Defaults to <code>300</code>. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-source</code></td>\n    <td>Data for the visualization. A JSON array, where each element is an array of <code>[label, value]</code>.</td>\n  </tr>\n  <tr>\n    <td><code>data-target</code></td>\n    <td>Target URL for optional JSON source. Will ignore other `data-` attributes if specified. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-visualization</code></td>\n    <td>Type of visualization: <code>donut</code>.</td>\n  </tr>\n</table>\n\n## Gauge\n\nA semicircular gauge visualization.\n\nSample HTML:\n\n<pre><code>&lt;div data-visualization=\"gauge\" data-value=\"23\" data-max=\"100\" data-threshold=\"50\" data-label-min=\"0\" data-label-max=\"16mm\"&gt;&lt;/div&gt;\n</code></pre>\n\nData API:\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>data-duration</code></td>\n    <td>Animation speed in milliseconds of visualization for initial render and subsequent updates. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-label-max</code></td>\n    <td>Text for the label at the right end of the gauge. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-label-min</code></td>\n    <td>Text for the label at the left end of the gauge. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-max</code></td>\n    <td>Maximum value.</td>\n  </tr>\n  <tr>\n    <td><code>data-min</code></td>\n    <td>Minimum value. Defaults to <code>0</code>. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-target</code></td>\n    <td>Target URL for optional JSON source. Will ignore other `data-` attributes if specified. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-threshold</code></td>\n    <td>Threshold value. Defines the position of the white marker on the visualization. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-value</code></td>\n    <td>Current value. Defines the position of the needle.</td>\n  </tr>\n  <tr>\n    <td><code>data-visualization</code></td>\n    <td>Type of visualization: <code>gauge</code>.</td>\n  </tr>\n</table>\n\n## Spiderweb\n\nA spiderweb visualization.\n\nSample HTML:\n\n<pre><code>&lt;div data-visualization=\"spiderweb\" data-max=\"80000\" data-source='[30000, 39000, 62000, 41000, 36000, 64000, 27000, 49000, 51000]'&gt;&lt;/div&gt;\n</code></pre>\n\nData API:\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>data-duration</code></td>\n    <td>Animation speed in milliseconds of visualization for initial render and subsequent updates. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-max</code></td>\n    <td>Maximum value. Determines the radius of the spiderweb inside the visualization.</td>\n  </tr>\n  <tr>\n    <td><code>data-source</code></td>\n    <td>An array of data points to plot on the spiderweb.</td>\n  </tr>\n  <tr>\n    <td><code>data-target</code></td>\n    <td>Target URL for optional JSON source. Will ignore other `data-` attributes if specified. <i>(optional)</i></td>\n  </tr>\n  <tr>\n    <td><code>data-visualization</code></td>\n    <td>Type of visualization: <code>spiderweb</code>.</td>\n  </tr>\n</table>\n",
  "readmeFilename": "README.md",
  "_id": "declarative-visualizations@0.6.0",
  "repository": {
    "type": "git",
    "url": "https://devcloud.sw.ge.com/source/scm/dxc/declarative-visualizations"
  }
}