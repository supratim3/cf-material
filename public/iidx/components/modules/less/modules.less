//-----------------
// MODULE COMPONENT
//-----------------
//
// What's happening here?
//
// Styling rules for the custom component called "module". Generally used
// as a wrapper for other components to generate structure in the format of
// header -> body -> footer. Can be actionable, draggable, scrollable or
// chromeless depending on use and placement within the application.
//
// Expects HTML in the following structure:
// <section class="module[ actionable draggable scrollable chromeless]">
//   <header class="module-header">Module Name / Actions</header>
//   <div class="module-body">Wrapped Component</div>
//   <footer class="module-footer">Links / Miscellaneous</footer>
// </section>
//
// Optionally supported classes:
// actionable : when action dropdown is present (unused)
// draggable  : used on dashboard views to enable drag/drop. forces all
//              modules to a fixed height and a table layout so content
//              can be centered vertically within the module body
// scrollable : used for fixed height modules (usually also draggable)
//              and enables overflowing content to be scrolled within
//              the module body
// chromeless : used when a module's default styling should not be applied
//              and when the wrapped object generally applies it's own
//              style rules to the module container elements, if present

// Dependencies
// --------------------------------------------------

@import "ge-bootstrap/less/ge-bootstrap.less";
@import "variables.less";


// Styles
// --------------------------------------------------

.module {
  background: @white;
  .border-radius(@baseBorderRadius);
  .box-sizing(border-box);
  padding: 15px;
  position: relative;
  .clearfix();
  .module-header {
    line-height: @baseLineHeight;
    margin-bottom: 15px;
    min-height: @baseLineHeight;
    .clearfix();
    > * {
      // Use the line-height of the header module, not the element.
      line-height: inherit;
    }
  }
  .module-body {
    .clearfix();
  }
  .module-body dl:first-child {
    margin-top: 0;
  }
  .module-footer > :first-child {
    margin-top: 15px;
  }
  .module-body div:last-child,
  .module-body p:last-child,
  .module-body ul:last-child,
  .module-body ol:last-child,
  .module-body dl:last-child,
  .module-footer *:last-child {
    margin-bottom: 0;
  }
  .module-body > hr {
    margin: 0 -15px 5px;
    border: 1px solid @hrBorder;
  }

  // Draggables
  &.draggable {
    // Reset the dimensions of modules since sortables and box-sizing
    // don't play nice with each other.
    .box-sizing(content-box);
    padding: 0;
    // Forcing the height of draggables because the smaller-size D3 graphs
    // will make the modules too tall and thus wrap incorrectly.
    height: 290px;
    .module-header {
      .border-radius(@baseBorderRadius @baseBorderRadius 0 0);
      margin-bottom: 0;
      padding: 15px;
      &:hover {
        cursor: move;
      }
      &:active {
        background-color: @grayLightest;
      }
    }
    .module-body {
      // This is a table because we need the child cell to fill the dimensions.
      // "table-row" has rendering problems in Firefox, so use "table" instead.
      display: table;
      height: 225px;
      width: 100%;
      > div:first-child {
        // The table-cell allows us to center content vertically in the space.
        display: table-cell;
        padding: 0 15px;
        vertical-align: middle;
        width: 100%;
      }
    }
    .module-footer {
      padding-left: 15px;
      padding-right: 15px;
      > :last-child {
        margin-bottom: 15px;
      }
    }
  }

  // Scrollables
  &.scrollable {
    // Override other behaviors if we expect this module to be fixed-height scrolling.
    .module-body {
      display: block;
      overflow-x: hidden;
      overflow-y: auto;
      > div {
        display: block;
      }
    }
  }

  // Chromeless
  &.chromeless {
    background: transparent;
    padding: 0;
    .module-header,
    .module-footer {
      display: none;
    }
  }

  // Spans full width
  &.fullwidth{
    padding:0 0 10px;
  }

  // Sortables
  &.ui-sortable-placeholder {
    background-color: @grayLightest;
    visibility: visible !important;
    .module-header,
    .module-body,
    .module-footer {
      visibility: hidden;
    }
  }
  &.ui-sortable-helper {
    border: 1px solid @grayLighter;
    .module-header {
      background-color: @grayLightest;
    }
  }

  // Nestables
  &.nestable {
    margin-bottom: 0;
  }

  // Collapsibles
  &.collapsible {
    padding-top: 0px;
    .module-header {
      margin-bottom: 0px;
      padding-top: 15px;
      padding-left: 18px;
      cursor: pointer;
      i.module-arrow {
        position: absolute;
        left: 15px;
      }
      &:hover {
        color: @linkColorHover;
      }
    }
    .collapse:before {
      content: " ";
      padding-top: 15px;
    }
  }
}

// GROUP STYLES
// -----------------

.module-group > .module:first-child {
  .border-radius(@baseBorderRadius @baseBorderRadius 0 0);
}

.module-group > .module {
  .border-radius(0);
}

.module-group > .module:last-child {
  .border-radius(0 0 @baseBorderRadius @baseBorderRadius);
}

.module-group > hr {
  margin: 0;
  border: 1px solid @hrBorder;
}